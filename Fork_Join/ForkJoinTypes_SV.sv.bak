// File: fork_join_example.sv
module fork_join_example;
  initial begin
    $display("[%0t] Starting fork-join all", $time);
    
    fork
      begin #5 $display("[%0t] Task 1 done", $time); end
      begin #10 $display("[%0t] Task 2 done", $time); end
      begin #15 $display("[%0t] Task 3 done", $time); end
    join
    
    $display("[%0t] After join-all\n", $time);
    
    fork
      begin #5 $display("[%0t] Task A done", $time); end
      begin #10 $display("[%0t] Task B done", $time); end
    join_any
    $display("[%0t] After join_any\n", $time);
    
    fork
      begin #5 $display("[%0t] Task X done", $time); end
      begin #10 $display("[%0t] Task Y done", $time); end
    join_none
    $display("[%0t] After join_none (parallel continues)\n", $time);
    
    #20 $display("[%0t] Simulation End", $time);
  end
endmodule


/*

Variant	           Wait Behavior	                     Use Case
join	        Waits for all child processes	       Synchronize tasks before proceeding
join_any	Waits for first child only	       Start next step as soon as any task completes
join_none	Does not wait at all	               Fire-and-forget tasks; main process continues

*/